import { RollupOptions } from 'rollup';
import { BuildOptions, ServerOptions, UserConfigExport, Plugin as VitePlugin } from 'vite';
import { MinfiyOption } from './types';
export declare type VariableOptions = Record<string, any> | undefined;
export declare class Config {
    private env;
    private splitEntries;
    private useVersioning;
    private minfiy;
    private entrypoints;
    private outputPath;
    private plugins;
    private buildOptions;
    private rollupOptions;
    private serverOptions;
    private providedVariables;
    private base;
    private root;
    private watchedPaths;
    constructor(env: "dev" | "development" | "production");
    setBase(base: string): void;
    setRoot(root: string): void;
    setOutputPath(path: string): void;
    usePlugins(plugins?: VitePlugin | VitePlugin[]): void;
    watch(paths: string | string[]): void;
    addBuildOptions(options: BuildOptions): void;
    addRollupOptions(options: RollupOptions | RollupOptions[]): void;
    addEntry(name: string, entry: string): void;
    splitEntryChunks(split?: boolean): void;
    enableVersioning(enable?: boolean): void;
    minify(minify?: MinfiyOption): void;
    provideVariables(variables: VariableOptions): void;
    isDev(): boolean;
    isProduction(): boolean;
    getEnv(): string;
    setServerOptions(options: ServerOptions): void;
    private getOutputFilename;
    handleHMR(): VitePlugin;
    getPlugins(): VitePlugin[];
    getViteConfig(): UserConfigExport;
}
